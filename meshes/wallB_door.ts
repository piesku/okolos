import {Mesh} from "../common/mesh.js";
import {GL_ARRAY_BUFFER, GL_ELEMENT_ARRAY_BUFFER, GL_STATIC_DRAW} from "../common/webgl.js";

export function mesh_wallB_door(gl: WebGLRenderingContext): Mesh {
    let vertex_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, vertex_buf);
    gl.bufferData(GL_ARRAY_BUFFER, vertex_arr, GL_STATIC_DRAW);

    let normal_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, normal_buf);
    gl.bufferData(GL_ARRAY_BUFFER, normal_arr, GL_STATIC_DRAW);

    let texcoord_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, texcoord_buf);
    gl.bufferData(GL_ARRAY_BUFFER, texcoord_arr, GL_STATIC_DRAW);

    let weights_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ARRAY_BUFFER, weights_buf);
    gl.bufferData(GL_ARRAY_BUFFER, weights_arr, GL_STATIC_DRAW);

    let index_buf = gl.createBuffer()!;
    gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER, index_buf);
    gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, index_arr, GL_STATIC_DRAW);

    return {
        VertexBuffer: vertex_buf,
        VertexArray: vertex_arr,
        NormalBuffer: normal_buf,
        NormalArray: normal_arr,
        TexCoordBuffer: texcoord_buf,
        TexCoordArray: texcoord_arr,
        WeightsBuffer: weights_buf,
        WeightsArray: weights_arr,
        IndexBuffer: index_buf,
        IndexArray: index_arr,
        IndexCount: index_arr.length,
    };
}

// prettier-ignore
let vertex_arr = Float32Array.from([
    0.5, 1, 0.5,
    0.5, 0, -0.5,
    0.5, 1, -0.5,
    0.5, 0, 0.5,
    0.5, 1, 0.5,
    -0.5, 0, 0.5,
    0.5, 0, 0.5,
    -0.5, 1, 0.5,
    -0.5, 0, 0.5,
    -0.5, 1, -0.5,
    -0.5, 0, -0.5,
    -0.5, 1, 0.5,
    -0.5, 1, -0.5,
    -0.498897, 0, -0.5,
    -0.5, 0, -0.5,
    -0.198897, 0, -0.5,
    -0.198897, 0.627794, -0.5,
    0.198897, 0.627794, -0.5,
    0.5, 1, -0.5,
    0.5, 0, -0.5,
    0.198897, 0, -0.5,
    -0.5, 1, -0.5,
    0.5, 1, 0.5,
    0.5, 1, -0.5,
    -0.5, 1, 0.5,
    -0.5, 0, 0.5,
    0.5, 0, -0.5,
    0.5, 0, 0.5,
    0.198897, 0, -0.5,
    0.146573, 0, -0.475,
    -0.146573, 0, -0.475,
    -0.146573, 0, -0.5,
    -0.198897, 0, -0.5,
    -0.498897, 0, -0.5,
    -0.5, 0, -0.5,
    0.146573, 0, -0.5,
    -0.146573, 0.575469, -0.475,
    0.146573, 0.575469, -0.5,
    0.146573, 0.575469, -0.475,
    -0.146573, 0.575469, -0.5,
    0.146573, 0, -0.475,
    0.146573, 0.575469, -0.5,
    0.146573, 0, -0.5,
    0.146573, 0.575469, -0.475,
    -0.198897, 0.627794, -0.5,
    -0.146573, 0, -0.5,
    -0.198897, 0, -0.5,
    -0.146573, 0.575469, -0.5,
    0.146573, 0.575469, -0.5,
    0.198897, 0.627794, -0.5,
    0.198897, 0, -0.5,
    0.146573, 0, -0.5,
    -0.146573, 0.575469, -0.475,
    -0.146573, 0, -0.5,
    -0.146573, 0.575469, -0.5,
    -0.146573, 0, -0.475,
    -0.146573, 0.575469, -0.475,
    0.146573, 0, -0.475,
    -0.146573, 0, -0.475,
    0.146573, 0.575469, -0.475
]);

// prettier-ignore
let normal_arr = Float32Array.from([
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    0, 0, 1,
    -1, 0, 0,
    -1, 0, 0,
    -1, 0, 0,
    -1, 0, 0,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, 1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    0, -1, 0,
    -1, 0, 0,
    -1, 0, 0,
    -1, 0, 0,
    -1, 0, 0,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    1, 0, 0,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1,
    0, 0, -1
]);

// prettier-ignore
let texcoord_arr = Float32Array.from([
    12, 1,
    13, 0,
    13, 1,
    12, 0,
    12, 1,
    11, 0,
    12, 0,
    11, 1,
    15, 0,
    14, 1,
    14, 0,
    15, 1,
    14, 1,
    13.9989, 0,
    14, 0,
    13.6989, 0,
    13.6989, 0.627794,
    13.3011, 0.627794,
    13, 1,
    13, 0,
    13.3011, 0,
    5, -11,
    4, -10,
    4, -11,
    5, -10,
    -19, -6,
    -18, -7,
    -18, -6,
    -18.3011, -7,
    -18.3534, -6.975,
    -18.6466, -6.975,
    -18.6466, -7,
    -18.6989, -7,
    -18.9989, -7,
    -19, -7,
    -18.3534, -7,
    -3.28785, -0.727667,
    -2.9947, -0.777667,
    -2.9947, -0.727667,
    -3.28785, -0.777667,
    2.20059, 2.2011,
    2.15059, 2.77657,
    2.15059, 2.2011,
    2.20059, 2.77657,
    13.5989, 2.8289,
    13.5466, 2.2011,
    13.5989, 2.2011,
    13.5466, 2.77657,
    13.2534, 2.77657,
    13.2011, 2.8289,
    13.2011, 2.2011,
    13.2534, 2.2011,
    8.05813, 2.77657,
    8.10813, 2.2011,
    8.10813, 2.77657,
    8.05813, 2.2011,
    0.506524, 0.99435,
    0, 0,
    0.506523, 0,
    0, 0.99435
]);

// prettier-ignore
let weights_arr = Float32Array.from([
    // Weights must be assigned manually for now b/c OBJ doesn't support them.
    // WARNING: Remaking the mesh file will overwrite your weights here.
]);

// prettier-ignore
let index_arr = Uint16Array.from([
    59, 56, 57,
    58, 57, 56,
    55, 52, 53,
    54, 53, 52,
    51, 50, 48,
    49, 48, 50,
    44, 48, 49,
    48, 44, 47,
    47, 44, 45,
    46, 45, 44,
    43, 40, 41,
    42, 41, 40,
    39, 36, 37,
    38, 37, 36,
    29, 28, 35,
    34, 25, 33,
    33, 25, 32,
    32, 25, 31,
    31, 25, 30,
    30, 25, 29,
    29, 25, 28,
    28, 25, 26,
    27, 26, 25,
    24, 21, 22,
    23, 22, 21,
    20, 19, 17,
    18, 17, 19,
    12, 17, 18,
    17, 12, 16,
    16, 12, 15,
    15, 12, 13,
    14, 13, 12,
    11, 8, 9,
    10, 9, 8,
    7, 4, 5,
    6, 5, 4,
    3, 0, 1,
    2, 1, 0
]);
